USE NOTEX

DROP TABLE IF EXISTS NOTE_TAGS, REVIEWS, NOTES, NOTEBOOK_TAGS , NOTEBOOKS , REPORTS, SIGNED_USERS , ASSISTANTS, ADMINISTRATORS;

CREATE TABLE SIGNED_USERS
(
	Id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	Username VARCHAR(32) NOT NULL UNIQUE,
	PasswordHash VARCHAR(256) NOT NULL,
	Salt VARCHAR(256) NOT NULL,
	HashAlgorithm VARCHAR(32) NOT NULL,
	UserState VARCHAR(32) NOT NULL,
	Score DOUBLE NOT NULL,
	CHECK ((Score >= 0 AND Score <= 5) OR Score = -1)
);


CREATE TABLE NOTEBOOKS
(
	Id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	UserId INT NOT NULL REFERENCES SIGNED_USERS(Id) ON DELETE CASCADE,
	Name VARCHAR(64) NOT NULL,
	Score DOUBLE NOT NULL,
	CHECK ((Score >= 0 AND Score <= 5) OR Score = -1),
	UNIQUE (UserId,Name)
);

CREATE TABLE NOTEBOOK_TAGS
(
	Id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	NotebookId INT NOT NULL REFERENCES NOTEBOOKS(Id) ON DELETE CASCADE,
	Name VARCHAR(64) NOT NULL,
	Value VARCHAR(64) NOT NULL,
	UNIQUE (NotebookId,Name)
);

CREATE TABLE NOTES
(
	Id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	NotebookId INT NOT NULL REFERENCES NOTEBOOKS(Id) ON DELETE CASCADE,
	Name VARCHAR(64) NOT NULL,
	ServerContextFile VARCHAR(128) NOT NULL,
	FilePath VARCHAR(128) NOT NULL,
	Score DOUBLE NOT NULL,
	CHECK ((Score >= 0 AND Score <= 5) OR Score = -1),
	UNIQUE (NotebookId,Name)
);

CREATE TABLE NOTE_TAGS
(
	Id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	NoteId INT NOT NULL REFERENCES NOTES(Id) ON DELETE CASCADE,
	Name VARCHAR(64) NOT NULL,
	Value VARCHAR(64) NOT NULL,
	UNIQUE (NoteId,Name)
);

CREATE TABLE REVIEWS
(
	Id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	ReviewText VARCHAR(2048),
	Score INT NOT NULL,
	UserId INT NOT NULL REFERENCES SIGNED_USERS(ID) ON DELETE CASCADE,
	NoteId INT NOT NULL REFERENCES NOTES(ID) ON DELETE CASCADE,
	CHECK (Score >= 0 AND Score <= 5 ),
	UNIQUE (UserId,NoteId)
);

CREATE TABLE ASSISTANTS
(
	Id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	Username VARCHAR(32) NOT NULL UNIQUE,
	PasswordHash VARCHAR(64) NOT NULL,
	Salt VARCHAR(64) NOT NULL,
	HashAlgorithm VARCHAR(32) NOT NULL
);

CREATE TABLE REPORTS
(
	Id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	ReportText VARCHAR(2048) NOT NULL,
	State VARCHAR(32) NOT NULL,
	ReporterUserId INT NOT NULL REFERENCES SIGNED_USERS(Id) ON DELETE CASCADE,
	ReportedUserId INT NOT NULL REFERENCES SIGNED_USERS(Id) ON DELETE CASCADE,
	AssistantId INT REFERENCES ASSISTANTS(Id) ON DELETE CASCADE
);

CREATE TABLE ADMINISTRATORS
(
	Id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	Username VARCHAR(32) NOT NULL UNIQUE,
	PasswordHash VARCHAR(64) NOT NULL,
	Salt VARCHAR(64) NOT NULL,
	HashAlgorithm VARCHAR(32) NOT NULL,
	Email VARCHAR(64) NOT NULL
);

